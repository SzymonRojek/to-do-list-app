{"version":3,"sources":["js/main.js"],"names":["tasks","bindEvents","document","querySelectorAll","forEach","removeButton","index","addEventListener","taskIndex","splice","render","toggleDoneButton","done","htmlString","task","content","querySelector","innerHTML","onFormSubmit","e","preventDefault","newTask","newTaskContent","value","trim","focus","resetInput","push","addNewTask"],"mappings":";AAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,IAAA,EAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,WAEQA,IAAAA,EAAQ,GAoBRC,EAAa,WACKC,SAASC,iBAAiB,cAElCC,QAAS,SAACC,EAAcC,GACpCD,EAAaE,iBAAiB,QAAS,WAdxB,IAAAC,EAAAA,EAeFF,EAdfN,EAAMS,OAAOD,EAAW,GACxBE,QAiB0BR,SAASC,iBAAiB,YAElCC,QAAS,SAACO,EAAkBL,GAC5CK,EAAiBJ,iBAAiB,QAAS,WAjBxB,IAAAC,EACrBR,EADqBQ,EAkBFF,GAjBFM,MAAQZ,EAAMQ,GAAWI,KAC1CF,SAqBIA,EAAS,WACTG,IADe,EACfA,EAAa,GAEEb,EAAAA,EAAAA,GAHA,IAGO,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfc,IAAAA,EAAe,EAAA,MACxBD,GAGQC,sHAAAA,OAAAA,EAAKF,KAAO,IAAM,GAEGE,4DAAAA,OAAAA,EAAKF,KAAO,oBAAsB,GACvDE,oBAAAA,OAAAA,EAAKC,QANb,qGAJiB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAgBnBb,SAASc,cAAc,aAAaC,UAAYJ,EAEhDZ,KAQIiB,EAAe,SAAAC,GACnBA,EAAEC,iBAEIC,IAAAA,EAAUnB,SAASc,cAAc,eACjCM,EAAiBD,EAAQE,MAAMC,QATpB,SAAAH,GACjBA,EAAQE,MAAQ,GAChBF,EAAQI,QASRC,CAAWL,GAMLC,GA1EW,SAAAA,GACjBtB,EAAM2B,KAAK,CACTZ,QAASO,IAGXZ,IAwEAkB,CAAWN,IAIXZ,IAEaR,SAASc,cAAc,YAE/BT,iBAAiB,SAAUW,GAzFpC","file":"main.601087b7.js","sourceRoot":"../src","sourcesContent":["(() => {\n\n  const tasks = [];\n\n  const addNewTask = newTaskContent => {\n    tasks.push({\n      content: newTaskContent, \n    });\n\n    render();\n  }\n\n  const removeTask = taskIndex => {\n    tasks.splice(taskIndex, 1);\n    render();\n  }\n\n  const toggleTaskDone = taskIndex => {\n    tasks[taskIndex].done = !tasks[taskIndex].done;\n    render();\n  }\n\n  const bindEvents = () => {\n    const removeButtons = document.querySelectorAll('.js-remove');\n\n    removeButtons.forEach( (removeButton, index) => {\n      removeButton.addEventListener('click', () => {\n        removeTask(index);\n      });\n    });\n\n    const toggleDoneButtons = document.querySelectorAll('.js-done');\n\n    toggleDoneButtons.forEach( (toggleDoneButton, index) => {\n      toggleDoneButton.addEventListener('click', () => {\n        toggleTaskDone(index);\n      });\n    });\n  }\n\n  const render = () => {\n    let htmlString = '';\n\n    for (const task of tasks) {\n      htmlString += `\n        <li class=\"list__item\">\n          <button class=\"list__button list__button--done js-done\">\n            ${task.done ? \"âœ“\" : \"\"}\n          </button>\n          <span class=\"list__task${task.done ? \" list__task--done\" : \"\"}\">\n            ${task.content}\n          </span>\n          <button class=\"list__button js-remove\">ðŸ—‘</button>\n        </li>`;\n    }\n\n    document.querySelector('.js-tasks').innerHTML = htmlString;\n\n    bindEvents();\n  }\n\n  const resetInput = newTask => {\n    newTask.value = '';\n    newTask.focus();\n  }\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n  \n    const newTask = document.querySelector('.js-newTask');\n    const newTaskContent = newTask.value.trim();\n    \n    resetInput(newTask);\n\n    // if ( newTaskContent ) {    \n    //   addNewTask(newTaskContent);\n    // }\n\n    if ( !newTaskContent ) {\n      return;\n    }\n    addNewTask(newTaskContent);\n  }\n\n  const init = () => {\n    render();\n\n    const form = document.querySelector('.js-form');\n\n    form.addEventListener('submit', onFormSubmit);\n  }\n\n  init ();\n\n})();"]}