{"version":3,"sources":["js/main.js"],"names":["tasks","hideDoneTasks","removeTask","taskIndex","filter","task","index","render","console","log","toggleDoneTask","map","done","addNewTask","newTaskContent","content","bindRemoveEvents","document","querySelectorAll","forEach","removeButton","addEventListener","bindToggleDoneEvents","toggleDoneButton","renderTasks","taskToHTML","join","querySelector","innerHTML","renderButtons","buttonsElement","length","every","toggleHideDoneTasks","markAllTasksDone","bindButtonsEvents","toggleHideDoneTasksButton","markAllDoneButton","onFormSubmit","e","preventDefault","newTaskElement","value","trim","focus","init"],"mappings":"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","file":"main.33d107a1.js","sourceRoot":"../src","sourcesContent":["\n{\n  let tasks = [];\n\n  let hideDoneTasks = false;\n \n  const removeTask = taskIndex => {\n    tasks = tasks.filter( (task, index) => taskIndex !== index);\n    \n    render();\n  };\n\n  console.log(tasks);\n  const toggleDoneTask = taskIndex => {\n   tasks = tasks.map( (task, index) => taskIndex === index ? { ...task, done: !task.done } : task)\n\n    render();\n  };\n\n  const addNewTask = newTaskContent => {\n    tasks = [\n      ...tasks,\n      { content: newTaskContent },\n    ];\n\n    render();\n  };\n\n  const bindRemoveEvents = () => {\n    const removeButtons = document.querySelectorAll('.js-removeButton');\n\n    removeButtons.forEach( (removeButton, taskIndex) => {\n      removeButton.addEventListener('click', () => {\n        removeTask(taskIndex);\n      });\n    });\n  };\n\n  const bindToggleDoneEvents = () => {\n    const toggleDoneButtons = document.querySelectorAll('.js-toggleDone');\n\n    toggleDoneButtons.forEach( (toggleDoneButton, taskIndex) => {\n      toggleDoneButton.addEventListener('click', () => {\n        toggleDoneTask(taskIndex);\n      });\n    });\n  };\n\n  const renderTasks = () => {\n    const taskToHTML = tasks.map( task => `\n        <li class=\"tasks__item${ task.done && hideDoneTasks ? \" tasks__item--hidden\" : \"\" }\">\n          <button class=\"tasks__button tasks__button--toggleDone js-toggleDone\">\n            ${ task.done ? \"âœ“\" : \"\" }\n          </button>\n          <span class=\"tasks__singleTask${ task.done ? \" tasks__singleTask--done\" : \"\" }\">\n            ${ task.content } \n          </span>\n          <button class=\"tasks__button js-removeButton\">\n            ðŸ—‘\n          </button>\n        </li>`).join(\"\"); \n\n    const tasksElement = document.querySelector('.js-tasks');\n    tasksElement.innerHTML = taskToHTML;\n  };\n\n  const renderButtons = () => {\n    const buttonsElement = document.querySelector('.js-buttons');\n\n    if (!tasks.length) {\n      buttonsElement.innerHTML = '';\n      return;\n    }\n\n    buttonsElement.innerHTML = `\n      <button class=\"buttons__button js-toggleHideDoneTasks\"\n        ${ tasks.every( ({ done }) => !done) ? \"disabled\" : \"\" } \n      >\n        ${ hideDoneTasks ? 'PokaÅ¼' : 'Ukryj' } ukoÅ„czone\n      </button>\n      <button class=\"buttons__button js-markAllDone\" \n        ${ tasks.every( ({ done }) => done) ? \"disabled\" : \"\" } \n      >\n        UkoÅ„cz wszystkie\n      </button>\n    `;\n  };\n\n  const toggleHideDoneTasks = () => {\n    hideDoneTasks = !hideDoneTasks;\n\n    render();\n  };\n\n  const markAllTasksDone = () => {\n    tasks = tasks.map( task => ({\n       ...task,\n       done: true,\n     }));\n \n     render();\n  };\n \n  const bindButtonsEvents = () => {\n    \n    const toggleHideDoneTasksButton = document.querySelector('.js-toggleHideDoneTasks');\n\n      if (toggleHideDoneTasksButton) {\n        toggleHideDoneTasksButton.addEventListener('click', toggleHideDoneTasks);\n      }\n \n    const markAllDoneButton = document.querySelector('.js-markAllDone');\n\n      if (markAllDoneButton) {\n        markAllDoneButton.addEventListener('click', markAllTasksDone);\n      }\n  };\n\n  const render = () => {\n    console.log(tasks);\n    renderTasks();\n    bindRemoveEvents();\n    bindToggleDoneEvents();\n\n    renderButtons();\n    bindButtonsEvents();\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    const newTaskElement = document.querySelector('.js-newTask');\n    const newTaskContent = newTaskElement.value.trim();\n\n      if (newTaskContent !== '') {\n        addNewTask(newTaskContent);\n        newTaskElement.value = '';\n      };\n    newTaskElement.focus();\n  };\n\n  const init = () => {\n    render();\n\n    const form = document.querySelector('.js-form');\n    form.addEventListener('submit', onFormSubmit);\n  };\n\n  init ();\n}"]}